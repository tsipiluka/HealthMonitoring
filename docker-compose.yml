services:
  backend:
    build: 'backend/'
    command: >
      sh -c "python /code/manage.py collectstatic --no-input  && python /code/manage.py makemigrations && python /code/manage.py migrate && gunicorn core.wsgi:application --bind 0.0.0.0:80"
    volumes:
      # - ./backend/:/code
      - /static:/static # <-- needs testing
      - media_uploads:/code/media
    depends_on:
      - db
    env_file:
      - vars.env
  frontend:
    build: 'frontend/healthmonitoring/'
    ports:
      - 4200:80
  reverse_proxy:
    image: nginx:1.19.0
    volumes:
      - ./conf/nginx.conf:/etc/nginx/conf.d/nginx.conf
      - /etc/letsencrypt:/etc/letsencrypt
      - /var/lib/letsencrypt:/var/lib/letsencrypt
      - /var/www/html:/var/www/html
      - /static:/static  # <-- needs testing
    ports:
      - 80:80
      - 443:443
    depends_on:
      - backend
      - frontend
  db:
    image: postgres:13
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - "POSTGRES_HOST_AUTH_METHOD=trust"
  # sonar-scanner:
  #   image: sonarsource/sonar-scanner-cli
  #   environment:
  #     SONAR_HOST_URL: "http://localhost:9000"
  #     SONAR_LOGIN: "sqp_fc5f78e6fe258efc30878a5475f759363cc53e01"
  #     SONAR_SCANNER_OPTS: "-Dsonar.projectKey=healthmonitoring"
  #   volumes:
  #     - ".:/usr/src"
  #   network_mode: "host"
volumes:
  postgres_data:
  media_uploads:
